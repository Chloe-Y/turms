# docker-compose -f docker-compose.standalone.yml up --force-recreate
#
# Run in a specific environment (e.g. "dev"):
# Powershell: $env:ENV="dev";docker-compose -f docker-compose.standalone.yml up --force-recreate
# Unix: ENV=dev docker-compose -f docker-compose.standalone.yml up --force-recreate
#

version: "3.4"

services:
  # MongoDB
  mongodb-router:
    image: "bitnami/mongodb-sharded:4.4.4"
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-router
      - MONGODB_SHARDING_MODE=mongos
      - MONGODB_CFG_PRIMARY_HOST=mongodb-cfg
      - MONGODB_CFG_REPLICA_SET_NAME=cfgreplicaset
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_ROOT_PASSWORD=turms
    healthcheck:
      test: "mongo -u root -p turms --port 27017 --eval='sh.status()' | grep mongodb-shard | grep -q '\"state\" : 1'"
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "27017:27017"

  mongodb-shard:
    image: "bitnami/mongodb-sharded:4.4.4"
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-shard
      - MONGODB_SHARDING_MODE=shardsvr
      - MONGODB_MONGOS_HOST=mongodb-router
      - MONGODB_ROOT_PASSWORD=turms
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=shard01

  mongodb-cfg:
    image: "bitnami/mongodb-sharded:4.4.4"
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-cfg
      - MONGODB_SHARDING_MODE=configsvr
      - MONGODB_ROOT_PASSWORD=turms
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_REPLICA_SET_NAME=cfgreplicaset

  # Redis
  redis:
    image: redis:6.2-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"

  # turms servers
  turms:
    image: "ghcr.io/turms-im/turms"
    depends_on:
      mongodb-router:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TURMS_JVM_OPTS: >
        -Dspring.profiles.active=${ENV}

        -Dturms.cluster.node.network.auto-increment=false

        -Dturms.cluster.discovery.address.advertise-strategy=advertise_address
        -Dturms.cluster.discovery.address.advertise-host=turms

        -Dturms.cluster.shared-config.mongo.uri=mongodb://root:turms@mongodb-router:27017/turms-standalone?authSource=admin
        -Dturms.service.mongo.admin.uri=mongodb://root:turms@mongodb-router:27017/turms-standalone?authSource=admin
        -Dturms.service.mongo.user.uri=mongodb://root:turms@mongodb-router:27017/turms-standalone?authSource=admin
        -Dturms.service.mongo.group.uri=mongodb://root:turms@mongodb-router:27017/turms-standalone?authSource=admin
        -Dturms.service.mongo.conversation.uri=mongodb://root:turms@mongodb-router:27017/turms-standalone?authSource=admin
        -Dturms.service.mongo.message.uri=mongodb://root:turms@mongodb-router:27017/turms-standalone?authSource=admin

        -Dturms.service.redis.session[0].url=redis://redis:6379
        -Dturms.service.redis.location[0].url=redis://redis:6379
    mem_limit: 2g
    healthcheck:
      test: "curl --fail --silent --user turms:turms turms:8510/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "7510:7510" # RPC
      - "8510:8510" # Metrics APIs + Admin APIs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  turms-admin:
    image: "ghcr.io/turms-im/turms-admin"
    ports:
      - "6510:6510"

  turms-gateway:
    image: "ghcr.io/turms-im/turms-gateway"
    depends_on:
      mongodb-router:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TURMS_GATEWAY_JVM_OPTS: >
        -Dspring.profiles.active=${ENV}

        -Dturms.cluster.node.network.auto-increment=false
        -Dturms.cluster.node.network.port=7610

        -Dturms.cluster.discovery.address.advertise-strategy=advertise_address
        -Dturms.cluster.discovery.address.advertise-host=turms-gateway

        -Dturms.cluster.shared-config.mongo.uri=mongodb://root:turms@mongodb-router:27017/turms-standalone?authSource=admin
        -Dturms.gateway.mongo.user.uri=mongodb://root:turms@mongodb-router:27017/turms-standalone?authSource=admin

        -Dturms.gateway.redis.session[0].url=redis://redis:6379
        -Dturms.gateway.redis.location[0].url=redis://redis:6379
    healthcheck:
      test: "curl --fail --silent --user turms:turms turms-gateway:9510/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
    mem_limit: 2g
    ports:
      - "7610:7610" # RPC
      - "9510:9510" # Metrics APIs
      - "10510:10510" # WebSocket
      - "11510:11510" # TCP
      - "12510:12510" # UDP
    ulimits:
      nofile:
        soft: 1024000
        hard: 1024000