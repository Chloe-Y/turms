/*
 * Copyright (C) 2019 The Turms Project
 * https://github.com/turms-im/turms
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request/user/query_nearby_users_request.proto

package im.turms.server.common.access.client.dto.request.user;

public final class QueryNearbyUsersRequestOuterClass {
  private QueryNearbyUsersRequestOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_im_turms_proto_QueryNearbyUsersRequest_descriptor;
  static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_im_turms_proto_QueryNearbyUsersRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-request/user/query_nearby_users_reques" +
      "t.proto\022\016im.turms.proto\"\222\002\n\027QueryNearbyU" +
      "sersRequest\022\020\n\010latitude\030\001 \001(\002\022\021\n\tlongitu" +
      "de\030\002 \001(\002\022\025\n\010distance\030\003 \001(\005H\000\210\001\001\022\027\n\nmax_n" +
      "umber\030\004 \001(\005H\001\210\001\001\022\035\n\020with_coordinates\030\005 \001" +
      "(\010H\002\210\001\001\022\032\n\rwith_distance\030\006 \001(\010H\003\210\001\001\022\026\n\tw" +
      "ith_info\030\007 \001(\010H\004\210\001\001B\013\n\t_distanceB\r\n\013_max" +
      "_numberB\023\n\021_with_coordinatesB\020\n\016_with_di" +
      "stanceB\014\n\n_with_infoB<\n5im.turms.server." +
      "common.access.client.dto.request.userP\001\272" +
      "\002\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_im_turms_proto_QueryNearbyUsersRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_im_turms_proto_QueryNearbyUsersRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_im_turms_proto_QueryNearbyUsersRequest_descriptor,
        new java.lang.String[] { "Latitude", "Longitude", "Distance", "MaxNumber", "WithCoordinates", "WithDistance", "WithInfo", "Distance", "MaxNumber", "WithCoordinates", "WithDistance", "WithInfo", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
